#! /usr/bin/bash

#Coder:AUT
#purpose:test problems that may be caused from alternative rule control not being centralized in one place orga design pattern defect

cleanup()
# example cleanup function
{
echo " ctrl+c?"

   for job in `cat pid.${sec}`
do
    /usr/bin/kill -9 $job 

done


rm pid.${sec} bonuslar$$ bonuslarAll$$ bonuslarAllRenew$$ flags$$ flags2$$ anchors2$$ anchors$$ altmis$$ otuz$$ notOtuz$$ notOtuzNotAltmis$$ bonuslarRenew$$
  return $?
}
 
control_c()
# run if user hits control-c
{
  #echo -en "\n*** Ouch! Exiting ***\n"
  cleanup
  exit $?
}
 
# trap keyboard interrupt (control-c)
trap control_c SIGINT

msisdn=$1
serviceID=$2
price=$3

AVEA_DIR=$ORGADATA/avea

work_dir=/tmp/ulvi/CI
testBilgi="$0 $@"
doMail()
# run to send mail notifications
{
cat maillist.txt |xargs echo > .mail
  echo -en "\n*** Mailing ***\n"
while read EMAIL_LIST
do
if [ ! -z "$EMAIL_LIST" ]
then
  echo -en Merhaba\\n\\n $1 '\n\nIyi Calismalar\n\nAUT\nKafein CI Solutions\n\nLoglar:\n' > tmp$msisdn
  echo ${0}Log$msisdn
cat output$msisdn >> tmp$msisdn

 scp tmp$msisdn mrte1@10.248.68.122:/tmp
 ssh mrte1@10.248.68.122 "source .profile; cat /tmp/tmp$msisdn| mailx -s \"Defect: $testBilgi\" $EMAIL_LIST"
#ssh mrte1@10.248.68.122 "source .profile;echo -en $1 '\\n\\nIyi Calismalar\\nAUT' | mailx -s \"Defect: $testBilgi\" $EMAIL_LIST"
fi
done < .mail
  
}

if [[ $# -ne 3 ]] 
    then 
	echo "illegal number of parameters"
	echo "Kullaným: $0 MSISDN serviceID yenilemeUcreti   "
	echo "ornek kullanim:"
	echo ""
	echo "$0 05011011111 650 17  "
 doMail "illegal number of parameters. Kullaným: $0 MSISDN serviceID yenilemeUcreti    örnek: $0 05011011111 650 17  " 
	exit
fi
#export ORACLE_HOME=/export/home/mrte1/orgaroot/OracleClient11.2/client
red='\e[0;33m' #33m sari :)
NC='\e[0m' # No Color
red2='\e[1;35m' #purple

ropName=$(  grep -oP "PP_.*0${serviceID}" $ORGADATA/cnf/cre/config_19700101000000.xml|head -1)         
aid=$(msisdn_to_accountid $msisdn )
echo "AccountID:"$aid
echo "#d    $ and and and and = :AccountID '$aid' != :ID '1' != :ID '2' != :ID '3' != :ID '7' " | idbm_adb -s CreBalance
#echo "#d    $   = :AccountID '$aid'  " | idbm_adb -s CreTrigger
echo "#u  :Value   $  and     = :AccountID '$aid'   = :ID '1'   & '$price'  " | idbm_adb -s CreBalance

mrteid=$(echo $ORGADATA|sed 's/\(.*\)\(.\)/\2/')
echo /tmp/ulvi/killAllPacks $msisdn

if [[ $mrteid -eq 2 ]] 
    then 
	ssh mrte1@localhost "source .profile > /dev/null 2>&1;/tmp/ulvi/killAllPacks $msisdn"   
	else
	/tmp/ulvi/killAllPacks $msisdn
	
fi

gold_operation_handler package $msisdn $ropName  ACT   2>&1 |grep ERROR
kalanPara=$(echo "#s  :Value   $  and     = :AccountID '$aid'   = :ID '1'      " | idbm_adb -s CreBalance|grep -v END|sed s/\'//g|perl -nl -MPOSIX -e 'print ceil($_);') 
 sec=$(date +%Y%m%d%H%M%S)
 bundleid=$(grep $ropName $ORGADATA/cnf/cre/config_19700101000000.xml|  grep -oP "(?<=<bundle id=\")[^\"]+"   )
 echo bundleid:$bundleid  
 ruleid=$(echo "#s  :RuleID $  and = :AccountID '$aid' = :BundleID '$bundleid'   " | idbm_adb -s CreTrigger|grep -v END|sed s/\'//g)
echo ruleid:$ruleid
 
later=$(mu_date -31)"000000"

echo "#s :ID :Value :Start :End  $ and and and and and = :AccountID '$aid' != :ID '1' != :ID '2' != :ID '3' != :ID '7' != :Value '0' " | idbm_adb -s CreBalance

echo "#u  :Value   $  and     = :AccountID '$aid'   = :ID '1'   & '$price'  " | idbm_adb -s CreBalance
 
later=$(mu_date -31)"000000"
later360=$(mu_date -361)"000000"

echo "#s :ID :Value :Start :End  $ and and and and and and and = :AccountID '$aid' != :ID '1512' != :ID '752' != :ID '1' != :ID '2' != :ID '3' != :ID '7' != :Value '0' " | idbm_adb -s CreBalance|grep -v END|sed s/\'//g > bonuslarAll$$

#yenileme sonrasý end date bos bonus sayýsý yani anchor bonus sayisi deðiþmesin. boylece farklý bir bonus verilmediði kontrolu otomatized

echo "#s :ID :Value :Start :End  $ and and and and and and and = :AccountID '$aid' = :End '' != :ID '1512' != :ID '752' != :ID '1' != :ID '2' != :ID '3' != :ID '7' " | idbm_adb -s CreBalance|grep -v END|sed s/\'//g > anchors$$

anchorCount1=$(cat anchors$$|wc -l)

egrep -v "$( ots_date -S `date +%'Y'%'m'%'d'000000` +1Y +1d )|$later360|20310101000000" bonuslarAll$$ > bonuslar$$

#bonus1=$(echo $bonuslar|head -1|awk '{print $1" " $2" "$4}')  #|sed s/\'//g
oneMonth0=$(mu_date -31)"000000"
#30olmayanlarýn - 60 olanlarýn sayýsý deðiþmesin  where end!30 and !60 yani 30gunluk olmayanlar yenilenmesin sayisi ayni kalsin
#30olmayanlar:
echo "#s :ID :Value :Start :End  $ and and and and and and and and = :AccountID '$aid' != :End '$oneMonth0' != :ID '1512' != :ID '752' != :ID '1' != :ID '2' != :ID '3' != :ID '7' != :Value '0' " | idbm_adb -s CreBalance|grep -v END|sed s/\'//g > notOtuz$$

notOtuzCount1=$(cat notOtuz$$|wc -l)


oneMonth=$(mu_date -31)"000010"
later2=$(mu_date -62)"000000"
#flags lasting more than 1 month will be saved to a file to check that they are not renewed.
echo "#s :ID :Value :Start :End  $ and and and and and and = :AccountID '$aid' > :End '$oneMonth' != :ID '1' != :ID '2' != :ID '3' != :ID '7' != :Value '0' " | idbm_adb -s CreBalance|grep -v END|sort|sed s/\'//g > flags$$


#ilk 30 günlük bonus sayýsý = yenileme sonrasý 30 gününde bitenlern sayýsý bölü 2 olsun

echo "#s :ID :Value :Start :End  $ and and and and and and and = :AccountID '$aid' = :End '$oneMonth0'  != :ID '1512' != :ID '1' != :ID '2' != :ID '3' != :ID '7' != :Value '0' " | idbm_adb -s CreBalance|grep -v END|sed s/\'//g > otuz$$

otuzCount1=$(cat otuz$$|wc -l)
	

	
	tail -f -n 0 /rte/orgadata/mrte?/OHPQ/EFD.smsdelay_0?-WA.smsdelay_spreader_0?/data.* &
	echo $! >> pid.$sec
	tail -f -n 0 /rte/orgadata/mrte?/OHPQ/WA.smsdelay_spreader_0?-WA.smsdelay_0?/data.*&
	echo $! >> pid.$sec
	tail -f -n 0 /rte/orgadata/mrte?/OHPQ/EFD.smsdelay_0?-EFD.sms9333_0?/data.*&
	echo $! >> pid.$sec
	tail -F -n 0 /rte/orgadata/mrte?/OHPQ/EFD.sms9333_0?-EVD.sms9333_0?/data.* > evdSMS9333&
	echo $! >> pid.$sec

	
	sleep 3
 	echo -e "******----------------iptal ve tekrar kayit TEST EDILIYO--------------------******${NC}"
gold_operation_handler package $msisdn $ropName  INACT   2>&1 |grep ERROR
if [[ $kalanPara -ne 0 ]]
then
	echo -e "\e[7m  ucreti yanlis.  ${NC}"
	echo $kalanPara
		 doMail "Kayit ucreti yanlis. $kalanPara"
fi
gold_operation_handler package $msisdn $ropName  ACT   2>&1 |grep ERROR
kalanPara=$(echo "#s  :Value   $  and     = :AccountID '$aid'   = :ID '1'      " | idbm_adb -s CreBalance|grep -v END|sed s/\'//g|perl -nl -MPOSIX -e 'print ceil($_);') 
if [[ $kalanPara -ne 0 ]]
then
	echo -e "\e[7m  ucreti yanlis.  ${NC}"
	echo $kalanPara
		 doMail "2. Kayit ucreti yanlis. $kalanPara"
fi

echo "#s :ID :Value :Start :End  $ and and and and and = :AccountID '$aid' != :ID '1' != :ID '2' != :ID '3' != :ID '7' != :Value '0' " | idbm_adb -s CreBalance

  
  
mrteid=$(echo $ORGADATA|sed 's/\(.*\)\(.\)/\2/')
if [[ $mrteid -eq 2 ]] 
    then 
	ssh mrte1@localhost "source .profile;subsquery $msisdn b || subsquery $msisdn b"   
	else
	subsquery $msisdn b || subsquery $msisdn b
	
fi
  

#yenileme sonrasý end date bos bonus sayýsý yani anchor bonus sayisi deðiþmesin.

echo "#s :ID :Value :Start :End  $ and and and and and and and = :AccountID '$aid' = :End '' != :ID '1512' != :ID '752' != :ID '1' != :ID '2' != :ID '3' != :ID '7' " | idbm_adb -s CreBalance|grep -v END|sed s/\'//g > anchors2$$

anchorCount2=$(cat anchors2$$|wc -l)

if [[ "$anchorCount2" != "$anchorCount1" ]]
then
doMail "Paket Yenilemede Extra Anchor Bonus verildi"
fi


#ilk 30 günlük bonus sayýsý =   yenileme sonrasý 30 gününde bitenlern sayýsý bölü 2 olsun

echo "#s :ID :Value :Start :End  $ and and and and and and and and = :AccountID '$aid' = :End '$oneMonth0' != :ID '1512' != :ID '752' != :ID '1' != :ID '2' != :ID '3' != :ID '7' != :Value '0' " | idbm_adb -s CreBalance|grep -v END|sed s/\'//g > altmis$$

altmisCount1=$(cat altmis$$|wc -l)
altmisCount1=$(echo "$altmisCount1/2"|bc -l)
if [[ "$altmisCount1" != "$otuzCount1".00000000000000000000 ]]
then
doMail "Paket Yenilemede gelen bonus sayisi yanlis gibi. Manuel kosup kontrol ediniz"
fi

#30olmayanlarýn  sayýsý deðiþmesin  where end!30 yani 30gunluk olmayanlar yenilenmesin sayisi ayni kalsin
#30olmayanlar:
echo "#s :ID :Value :Start :End  $ and and and and and and and and = :AccountID '$aid' != :End '$oneMonth0' != :ID '1512' != :ID '752' != :ID '1' != :ID '2' != :ID '3' != :ID '7' != :Value '0' " | idbm_adb -s CreBalance|grep -v END|sed s/\'//g > notOtuzNotAltmis$$

notOtuzNotAltmisCount=$(cat notOtuzNotAltmis$$|wc -l)


if [[ "$notOtuzNotAltmisCount" != "$notOtuzCount1" ]]
then
doMail "Paket Yenilemede 30gunluk olmayanlar yenilenmemeli. Bonus Sayisi tutmadi Manuel kosup kontrol ediniz."
fi

echo "#s :ID :Value :Start :End  $ and and and and and and and = :AccountID '$aid' != :ID '1512' != :ID '752' != :ID '1' != :ID '2' != :ID '3' != :ID '7' != :Value '0' " | idbm_adb -s CreBalance|grep -v END|sed s/\'//g > bonuslarAllRenew$$

egrep -v "$( ots_date -S `date +%'Y'%'m'%'d'000000` +1Y +1d )|$later360|20310101000000" bonuslarAllRenew$$ > bonuslarRenew$$ #6aylik flag bonus falan gelirse buraya ekle


#ayni bonuslar gelmismi
while read line
do
bonusIDsi=`echo $line|awk '{print $1}'`
varMi=$(egrep "^$bonusIDsi " bonuslarRenew$$|wc -l)
if [[ "$varMi" != "2" ]]
then
doMail "Yenilemede eksik Bonus: $bonusIDsi"
fi

done < bonuslar$$

#end date kontrolleri. 
while read line
do
bonusEnd=`echo $line|awk '{print $4}'`
#bonusStart=`echo $line|awk '{print $3}'`
if [[ "$bonusEnd" != "$later" ]]
then
doMail "Paket Yenilemede Bonus EndDate yanlis: $bonusEnd"
fi

done < bonuslarRenew$$


#flags lasting more than 1 month will be saved to a file to check that they are not renewed.
echo "#s :ID :Value :Start :End  $ and and and and and and and and = :AccountID '$aid' > :End '$oneMonth' != :ID '1512' != :ID '752' != :ID '1' != :ID '2' != :ID '3' != :ID '7' != :Value '0' " | idbm_adb -s CreBalance|grep -v END|sort|sed s/\'//g > flags2$$

sort flags2$$ > tmp
mv tmp flags2$$

sort flags$$ > tmp
mv tmp flags$$

fark=$(diff flags$$ flags2$$|wc -l)

if [[ "$fark" != "0" ]]
then
echo "Flag yenilendi. Alternative rule eksik olabilir.  "
doMail "Flag yenilendi. Alternative rule eksik olabilir.  "
fi


rm BASDB
read pp < $AVEA_DIR/dbLogin  
#for UAT#  sqlplus -s >> BASDB  bastst2/bas123@10.248.68.124:1529/BAS2T << EOF
#for agile# sqlplus -s >> BASDB  bastst1/bas123@10.248.68.135:1529/BAS1T << EOF
sqlplus -s >> BASDB  bastst1/bas123@10.248.68.135:1529/BAS1T << EOF
whenever sqlerror exit sql.sqlcode
set feedback off;
set head off;
set pagesize 0;
set linesize 1000

select b.lc_state|| '|' || to_char(B.LC_DATE_FROM,'YYYYMMDDHH24MISS')|| '|' ||to_char(B.LC_DATE_TO,'YYYYMMDDHH24MISS') from SOLD_COMPONENT_TBL a, LC_SOLD_COMPONENT_TBL b where a.account_fk=${aid} and  A.SOLD_COMPONENT_ID=B.SOLD_COMPONENT_FK and a.SOLD_COMPONENT_NAME like '%0${serviceID}%'  and b.LC_STATE='ACT' and B.LC_DATE_TO>sysdate;

EXIT;
EOF

 
actTO=$(grep ACT BASDB|cut -d'|' -f3)
sleep 10
 for job in `cat pid.${sec}`
 do
    /usr/bin/kill -9 $job 

done
 rm pid.$sec 
 
 
smsid=`egrep -v '==|^$|><MSGID>3</MSGID>|<MSGID>4</MSGID>|<MSGID>1833</MSGID>|<MSGID>18..</MSGID>'  evdSMS9333|grep $msisdn|grep -oP "(?<=<MSGID>)[^<]+"|tail -1`
echo $smsid
echo -e "${red}******--------------Varsa OHPQ'daki MSGID'nin SMS metni:--------------------******${NC}"
		result=$(sqlplus -s APSATl/apsatl234@"(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=sms9333t_cluster)(PORT=1529))(CONNECT_DATA=(SERVER=dedicated)(SERVICE_NAME=VAS93T)))"  << EOF
		set heading off
		select distinct sms_text from apsatl.sms_text where sms_id=${smsid};
		EXIT;
		EOF)
	echo -e "\e[7m$result"
echo -e "${red}******--------------------------------------------------------------******${NC}"

if [[ $actTO -ne '22000101000000' ]] 
    then 
	 echo -e "\e[7m  ACT TO_DATE 2200 degil: $actTO  ${NC}"
	 doMail "ACT TO_DATE 2200 degil."
fi
 
rm  bonuslar$$ bonuslarAll$$ bonuslarAllRenew$$ flags$$ flags2$$ anchors2$$ anchors$$ altmis$$ otuz$$ notOtuz$$ notOtuzNotAltmis$$ bonuslarRenew$$
