#! /usr/bin/bash
 
 
msisdn=$1
serviceID=$2
price=$3


if [[ $# -ne 2&&$# -ne 3 ]] 
    then 
        echo "illegal number of parameters"
        echo "Kullaným: $0 MSISDN serviceID yenilemeUcreti "
        echo "ornek kullanim:"
        echo ""
        echo "$0 05011011111 650"
        echo "$0 05011011111 650 17"

        exit
fi
cleanup()
# example cleanup function
{
echo " ctrl+c?"

   for job in `cat pid.${sec}`
do
    /usr/bin/kill -9 $job 

done
rm pid.${sec}
sleep 3
  return $?
}
 
control_c()
# run if user hits control-c
{
  #echo -en "\n*** Ouch! Exiting ***\n"
  cleanup
  exit $?
}
 
# trap keyboard interrupt (control-c)
trap control_c SIGINT
red='\e[0;33m' #33m sari :)
NC='\e[0m' # No Color
red2='\e[1;35m' #purple
 sec=$(date +%Y%m%d%H%M%S)
ropName=$(  grep -oP "PP_.*0${serviceID}" $ORGADATA/cnf/cre/config_19700101000000.xml|head -1)         
aid=$(msisdn_to_accountid $msisdn )

echo "AccountID:"$aid
echo "#d    $ and and and and = :AccountID '$aid' != :ID '1' != :ID '2' != :ID '3' != :ID '7' " | idbm_adb -s CreBalance
#echo "#d    $   = :AccountID '$aid'  " | idbm_adb -s CreTrigger
echo "#u  :Value   $  and     = :AccountID '$aid'   = :ID '1'   & '1000'  " | idbm_adb -s CreBalance

#gold_operation_handler package $msisdn $ropName  INACT   > /dev/null 2>&1
/tmp/ulvi/killAllPacks $msisdn

tail -f -n 0 /rte/orgadata/mrte?/OHPQ/EFD.smsdelay_0?-WA.smsdelay_spreader_0?/data.* > EFD.smsdelay_0?-WA.smsdelay_spreader_0?.smsohpqdata&
    echo $! >> pid.$sec
    tail -f -n 0 /rte/orgadata/mrte?/OHPQ/WA.smsdelay_spreader_0?-WA.smsdelay_0?/data.* > WA.smsdelay_spreader_0?-WA.smsdelay_0?.smsohpqdata.smsohpqdata &
    echo $! >> pid.$sec
    tail -f -n 0 /rte/orgadata/mrte?/OHPQ/EFD.smsdelay_0?-EFD.sms9333_0?/data.* > EFD.smsdelay_0?-EFD.sms9333_0?.smsohpqdata &
    echo $! >> pid.$sec
    tail -f -n 0 /rte/orgadata/mrte?/OHPQ/EFD.sms9333_0?-EVD.sms9333_0?/data.* > evdSMS9333&
    echo $! >> pid.$sec
    tail -f -n 0 /rte/orgadata/mrte?/OHPQ/*sms*/data.* > allsms.ohpqdata&
    echo $! >> pid.$sec
    
    tail -f -n 0 /rte/orgadata/mrte?/OHPQ/BAS-EFD.bas/data.* > BAS-EFD.bas.smsohpqdata&
    echo $! >> pid.$sec

gold_operation_handler package $msisdn $ropName  ACT   2>&1 |grep ERROR
kalanPara=$(echo "#s  :Value   $  and     = :AccountID '$aid'   = :ID '1'      " | idbm_adb -s CreBalance|grep -v END|sed s/\'//g|perl -nl -MPOSIX -e 'print ceil($_);') 
 sec=$(date +%Y%m%d%H%M%S)
 bundleid=$(grep $ropName $ORGADATA/cnf/cre/config_19700101000000.xml|  grep -oP "(?<=<bundle id=\")[^\"]+"   )
 echo bundleid:$bundleid  
 ruleid=$(echo "#s  :RuleID $  and = :AccountID '$aid' = :BundleID '$bundleid'   " | idbm_adb -s CreTrigger|grep -v END|sed s/\'//g)
echo ruleid:$ruleid
if [[ $kalanPara -ne `expr 1000 - $price` ]]
then
        echo -e "\e[7m Kayit ucreti yanlis.  ${NC}"
        echo $kalanPara
fi

        echo -e "******----------------RENEW TEST EDILIYO--------------------******${NC}"

 today_isodate=$(ots_date -S `date +%'Y'%'m'%'d'000000` +31d)
 gece=`date +%'Y'%'m'%'d'000000`
echo change Trigger date
 echo "#u  :ChargedToDate :NextTriggerDate $  and = :AccountID '$aid' = :BundleID '$bundleid' & '$gece' '$gece'" | idbm_adb -s CreTrigger 
 echo change Trigger date finished
  echo -e "${red2}cre_batch kosuluyor"
#$ORGAROOT/run/bin/cre_batch -e $today_isodate -r 70,$ruleid  -DID BAT.manually  -a $aid > /dev/null 2>&1
 cre_batch -DID BAT.manually
kalanPara=$(echo "#s  :Value   $  and     = :AccountID '$aid'   = :ID '1'      " | idbm_adb -s CreBalance|grep -v END|sed s/\'//g|perl -nl -MPOSIX -e 'print ceil($_);') 
if [[ $kalanPara -ne `expr 1000 - 2 \* $price` ]]
then
        echo -e "\e[7m Yenileme ucreti yanlis.  ${NC}"
        echo $kalanPara
fi
mrteid=$(echo $ORGADATA|sed 's/\(.*\)\(.\)/\2/')
sleep 3
 if [[ $mrteid -eq 2 ]] 
    then 
        ssh mrte1@localhost "source .profile;subsquery $msisdn b || subsquery $msisdn b || subsquery $msisdn b"   
        ssh mrte1@localhost "source .profile;subsquery $msisdn p || subsquery $msisdn p || subsquery $msisdn p"   
        else
        subsquery $msisdn b || subsquery $msisdn b || subsquery $msisdn b
        subsquery $msisdn p || subsquery $msisdn p || subsquery $msisdn p
        
fi
 
echo "#s :ID :Value :Start :End  $ and and and and and = :AccountID '$aid' != :ID '1' != :ID '2' != :ID '3' != :ID '7' != :Value '0' " | idbm_adb -s CreBalance


 today_isodate=$(ots_date -S `date +%'Y'%'m'%'d'000000` +61d)
 
 echo change Trigger date
 echo "#u  :ChargedToDate :NextTriggerDate $  and = :AccountID '$aid' = :BundleID '$bundleid' & '$gece' '$gece'" | idbm_adb -s CreTrigger 
 echo change Trigger date finished
 
 echo -e "${red2}cre_batch kosuluyor2 $today_isodate"
#$ORGAROOT/run/bin/cre_batch -e $today_isodate -r 70,$ruleid  -DID BAT.manually  -a $aid > /dev/null 2>&1
 cre_batch   -DID BAT.manually
 sleep 3
 mrteid=$(echo $ORGADATA|sed 's/\(.*\)\(.\)/\2/')
 
        subsquery $msisdn b || subsquery $msisdn b || subsquery $msisdn b
        subsquery $msisdn p || subsquery $msisdn p || subsquery $msisdn p
        
echo press enter for scheduler part
read a
later=$(mu_date -31)"000000"


sec=$(date +%Y%m%d%H%M%S)
 
sleep 3
rm BASDB


echo 'update lc_sold_component_tbl set lc_date_from=to_date("'$sec'" , 'yyyymmDDhh24:MI:ss') where account_fk = "'$aid'" and lc_date_from =to_date("'$later'" , 'yyyymmDDhh24:MI:ss');'
#for Agile#sqlplus -s >> BASDB  bastst1/bas123@10.248.68.135:1529/BAS1T << EOF
#for uat sqlplus  >> BASDB  bastst2/bas123@10.248.68.124:1529/BAS2T << EOF
sqlplus -s >> BASDB  bastst1/bas123@10.248.68.135:1529/BAS1T << EOF
spool basSql
set pagesize 1000;
set linesize 1000

update lc_sold_component_tbl set lc_date_to=to_date('$sec' , 'yyyymmDDhh24:MI:ss')
where account_fk = '$aid'
and lc_date_to = to_date('$later' , 'yyyymmDDhh24:MI:ss');

update lc_sold_component_tbl set lc_date_from=to_date('$sec' , 'yyyymmDDhh24:MI:ss')
where account_fk = '$aid'
and lc_date_from = to_date('$later' , 'yyyymmDDhh24:MI:ss');

commit;

EXIT;
EOF

ssh bas@10.248.68.128 'source .profile; OUPMclient -Q scheduler'
echo sleep 160 seconds for the scheduler
sleep 160
 
 
echo
        echo subsquery $msisdn B -- subsquery $msisdn P
        subsquery $msisdn B;echo ---;subsquery $msisdn P
        
 
echo
echo "#s :ID :Value :Start :End  $ and  and and and = :AccountID '$aid'  != :ID '2' != :ID '3' != :ID '7' != :Value '0' " | idbm_adb -s CreBalance

echo yenilenmediyse 1dk daha bekleyin.

echo -e "${red2}  SMS_DELAY WA calistiriliyor"
#log harvesting:
rm smsDelayLog
logFile=$(ls -1t $ORGADATA/avea/work/SMS_DELAY/log/$(date +%Y%m)/smsdelay*log|head -1)
tail -f -n 0 $logFile > smsDelayLog &
echo $! >> pid.$sec
OUPMclient -Q smsdelay_spreader_01 >> /dev/null       2>&1
sleep 2
OUPMclient -Q smsdelay_spreader_01   >> /dev/null       2>&1
sleep 2
OUPMclient -Q smsdelay_spreader_01       >> /dev/null       2>&1
sleep 5
OUPMclient -Q sms_delay_01  >> /dev/null       2>&1



if [[ $mrteid -eq 2 ]] 
    then 
    ssh mrte1@localhost 'source .profile;OUPMclient -Q smsdelay_spreader_01;sleep 2;OUPMclient -Q smsdelay_spreader_01;sleep 2;OUPMclient -Q smsdelay_spreader_01 ;sleep 5;OUPMclient -Q sms_delay_01'   > /dev/null       2>&1
    else
    ssh mrte2@localhost 'source .profile;OUPMclient -Q smsdelay_spreader_01;sleep 2;OUPMclient -Q smsdelay_spreader_01;sleep 2;OUPMclient -Q smsdelay_spreader_01 ;sleep 5;OUPMclient -Q sms_delay_01' > /dev/null       2>&1
    
fi

OUPMclient -Q smsdelay_spreader_01 >> /dev/null       2>&1
sleep 2
OUPMclient -Q smsdelay_spreader_01   >> /dev/null       2>&1
sleep 2
OUPMclient -Q smsdelay_spreader_01       >> /dev/null       2>&1
sleep 5
OUPMclient -Q sms_delay_01  >> /dev/null       2>&1
sleep 6
 for job in `cat pid.${sec}`
do
    /usr/bin/kill -9 $job 

done
 rm pid.$sec
echo "SMS_DELAY Log:"
 echo ""

 grep "I:0:$ropName:$msisdn has been notified about package renewal." smsDelayLog
 echo ""
 logGrep=$(grep "I:0:$ropName:$msisdn has been notified about package renewal." smsDelayLog|wc -l)
 
 if [[ $logGrep -eq 0 ]] 
    then 
     echo -e "\e[7m  SMS_DELAY WA Loguna gereken gelmedi  ${NC}"
    
fi

smsid=`egrep -v '==|^$|><MSGID>3</MSGID>|><MSGID>4</MSGID>'  evdSMS9333|grep $msisdn|grep -oP "(?<=<MSGID>)[^<]+"|tail -1`
echo $smsid
echo -e "${red}******--------------OHPQ'daki MSGID'nin DBdeki OUTBOUND_SMS_RULES kaydi:--------------------******${NC}"
result=$(sqlplus -s APSATl/apsatl234@"(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=sms9333t_cluster)(PORT=1529))(CONNECT_DATA=(SERVER=dedicated)(SERVICE_NAME=VAS93T)))"  << EOF
        set heading off

        select *  from apsatl.OUTBOUND_SMS_RULES where sms_id=${smsid} or MESSAGE_ID=${smsid};
        EXIT;
        EOF)
                echo -e "\e[7m$result"
         
echo -e "${red}******--------------------------------------------------------------******${NC}"

echo -e "${red}******--------------OHPQ'daki MSGID'nin SMS metni:--------------------******${NC}"
        result=$(sqlplus -s APSATl/apsatl234@"(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=sms9333t_cluster)(PORT=1529))(CONNECT_DATA=(SERVER=dedicated)(SERVICE_NAME=VAS93T)))"  << EOF
        set heading off
        select distinct sms_text from apsatl.sms_text where sms_id=${smsid};
        EXIT;
        EOF)
    echo -e "\e[7m$result"
echo -e "${red}******--------------------------------------------------------------******${NC}"

rm BASDB
sleep 5
read pp < $AVEA_DIR/dbLogin  
#for UAT#  sqlplus -s >> BASDB  bastst2/bas123@10.248.68.124:1529/BAS2T << EOF
#for Agile#  sqlplus -s >> BASDB  bastst1/bas123@10.248.68.135:1529/BAS1T << EOF
sqlplus -s >> BASDB  bastst1/bas123@10.248.68.135:1529/BAS1T << EOF
whenever sqlerror exit sql.sqlcode
set feedback off;
set head off;
set pagesize 0;
set linesize 1000

select b.lc_state|| '|' || to_char(B.LC_DATE_FROM,'YYYYMMDDHH24MISS')|| '|' ||to_char(B.LC_DATE_TO,'YYYYMMDDHH24MISS') from SOLD_COMPONENT_TBL a, LC_SOLD_COMPONENT_TBL b where a.account_fk=${aid} and  A.SOLD_COMPONENT_ID=B.SOLD_COMPONENT_FK and a.SOLD_COMPONENT_NAME like '%0${serviceID}%'  and b.LC_STATE='ACT' and B.LC_DATE_TO>sysdate;

EXIT;
EOF

 
actTO=$(grep ACT BASDB|cut -d'|' -f3)
 

if [[ $actTO -ne '22000101000000' ]] 
    then 
     echo -e "\e[7m  ACT TO_DATE 2200 degil: $actTO  ${NC}"
    
fi
  
